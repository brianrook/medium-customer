# Default values for customer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: r.cfcr.io/docketdynamics/medium-customer
  tag: test
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  # name: ~

rbac:
  create: true

podAnnotations: {}
#  prometheus.io/scrape: "true"
#  prometheus.io/path: "/actuator/prometheus"

spring:
  ## Uncomment if you want to activate a specfic spring profile
  # profile: kubernetes
  ## Ensures that Spring trusts Kubernetes certificate for use with
  ## service discovery, configuration, etc.
  trustKubernetesCertificates: true
  ## customized parameters/config for your spring app.
  ## by default will be rendered to `/config/application.yml`
  config:
    ## Currently only supports file
    type: file
    ## Contents of config in YAML
    content: |-
      spring:
        application:
          name: attendee
        datasource:
          hikari:
            connectionTimeout: 20000
            maximumPoolSize: 2
          url: jdbc:postgresql://ec2-52-23-14-156.compute-1.amazonaws.com:5432/df8ifk9f7jceoe
      liquibase:
        change-log: db/changelog/db.changelog-master.yaml
    ## An optional secret that contains a base64 encoded YAML file to be loaded in
    ## for passwords and other secrets, by default `/config/secret.yml`
    ## this secret must only have a single key of `secret.yml: |-`.
    # secretName: configSecret

## The list of ports that your app listens on
containerPort: 8080

extraEnv: {}

secretsToEnv:
  - name: SPRING_DATASOURCE_PASSWORD
    valueFrom:
      secretKeyRef:
        name: database-secrets
        key: SPRING_DATASOURCE_PASSWORD
  - name: SPRING_DATASOURCE_USERNAME
    valueFrom:
      secretKeyRef:
        name: database-secrets
        key: SPRING_DATASOURCE_USERNAME

securityContext: {}

resources: {}

livenessProbe: {}

readinessProbe: {}

nodeSelector: {}

tolerations: []

affinity: {}

service:
  enabled: true
  httpPort: 80
  nodePort: 30001
  type: NodePort
ingress:
  enabled: false
podDisruptionBudget:
  enabled: false
  minAvailable: 1